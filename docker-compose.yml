version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db:/docker-entrypoint-initdb.d
    networks:
      - ecommerce-network

  mongodb:
    image: mongo:6
    environment:
      MONGO_INITDB_DATABASE: ecommerce
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  backend:
    build: ./backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      POSTGRES_URL: postgresql://user:password@postgres:5432/ecommerce
      MONGODB_URL: mongodb://mongodb:27017/ecommerce
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_jwt_secret_here
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - postgres
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - ecommerce-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      API_BASE_URL: http://localhost:3001/api
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - ecommerce-network

volumes:
  postgres_data:
  mongo_data:
  redis_data:

networks:
  ecommerce-network:
    driver: bridge